#############################################################################
# Makefile for building libdm1-threads.so.1.0.3
# Generated by tmake at 00:46, 2002/12/13
#     Project: dm1-threads
#    Template: lib
# Modified by hand: 14-12-02
#############################################################################

####### Compiler, tools and options

VERSION =       1.0.5
VERSION2 =      1.0
VERSION3 =      1
CC	=	gcc
CXX	=	g++
CFLAGS	=	-pipe -Wall -W -g -D_REENTRANT -fPIC
CXXFLAGS=	-pipe -Wall -W -g -D_REENTRANT -fPIC
INCDIR  =       ../../include
INCPATH	=	-I$(INCDIR)
LINK	=	g++
LFLAGS	=	-shared -Wl,-soname,libdm1-threads.so.$(VERSION3)
LIBS	=	$(SUBLIBS) -lpthread
AR	=	ar cqs
RANLIB	=	
LIBDIR  =       ../../lib

TAR	=	tar -cf
GZIP	=	gzip -9f

####### Files

HEADERS =	common.h \
		event.h \
		except.h \
		list.h \
		thread.h \
		monitor.h \
		threadpool.h \
		port.h \
		mutex.h \
		latch.h
SOURCES =	event.cpp \
		list.cpp \
		latch.cpp \
		monitor.cpp \
		thread.cpp \
		threadpool.cpp
OBJECTS =	event.o \
		list.o \
		latch.o \
		monitor.o \
		thread.o \
		threadpool.o
DIST	=	
TARGET	=	libdm1-threads.so.$(VERSION)
TARGETA	=	$(LIBDIR)/libdm1-threads.a
TARGETD	=	libdm1-threads.so.$(VERSION)
TARGET0	=	libdm1-threads.so
TARGET1	=	libdm1-threads.so.$(VERSION3)
TARGET2	=	libdm1-threads.so.$(VERSION2)

####### Implicit rules

.SUFFIXES: .cpp .cxx .cc .C .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules


all: $(LIBDIR)/libdm1-threads.so.$(VERSION)

$(LIBDIR)/libdm1-threads.so.$(VERSION): $(OBJECTS) $(SUBLIBS) 
	-rm -f $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2)
	$(LINK) $(LFLAGS) -o $(TARGETD) $(OBJECTS) $(LIBS)
	-ln -s $(TARGET) $(TARGET0)
	-ln -s $(TARGET) $(TARGET1)
	-ln -s $(TARGET) $(TARGET2)
	-rm -f $(LIBDIR)/$(TARGET)
	-rm -f $(LIBDIR)/$(TARGET0)
	-rm -f $(LIBDIR)/$(TARGET1)
	-rm -f $(LIBDIR)/$(TARGET2)
	-mv $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2) $(LIBDIR)

staticlib: $(TARGETA)

$(TARGETA): $(OBJECTS) 
	-rm -f $(TARGETA)
	$(AR) $(TARGETA) $(OBJECTS)

clean:
	-rm -f $(OBJECTS) $(OBJMOC) $(SRCMOC) $(UICIMPLS) $(UICDECLS) $(TARGET)
	-rm -f $(TARGET0) $(TARGET1) $(TARGET2) $(TARGETA)
	-rm -f $(LIBDIR)/$(TARGET0) $(LIBDIR)/$(TARGET1) $(LIBDIR)/$(TARGET2) $(LIBDIR)/$(TARGETA)
	-rm -f $(LIBDIR)/$(TARGETD) $(LIBDIR)/$(TARGET) 
	-rm -f *~ core

####### Sub-libraries


###### Combined headers


####### Compile

event.o: event.cpp

list.o: list.cpp

latch.o: latch.cpp

monitor.o: monitor.cpp

thread.o: thread.cpp

threadpool.o: threadpool.cpp

# DO NOT DELETE

event.o: $(INCDIR)/dm1/event.h $(INCDIR)/dm1/common.h
event.o: $(INCDIR)/dm1/except.h $(INCDIR)/dm1/port.h
event.o: $(INCDIR)/dm1/mutex.h
latch.o: $(INCDIR)/dm1/latch.h $(INCDIR)/dm1/common.h
latch.o: $(INCDIR)/dm1/except.h $(INCDIR)/dm1/list.h
latch.o: $(INCDIR)/dm1/mutex.h $(INCDIR)/dm1/port.h
latch.o: $(INCDIR)/dm1/thread.h $(INCDIR)/dm1/event.h
list.o: $(INCDIR)/dm1/list.h
monitor.o: $(INCDIR)/dm1/monitor.h $(INCDIR)/dm1/common.h
monitor.o: $(INCDIR)/dm1/except.h $(INCDIR)/dm1/port.h
monitor.o: $(INCDIR)/dm1/list.h $(INCDIR)/dm1/mutex.h
monitor.o: $(INCDIR)/dm1/thread.h $(INCDIR)/dm1/event.h
thread.o: $(INCDIR)/dm1/thread.h $(INCDIR)/dm1/common.h
thread.o: $(INCDIR)/dm1/except.h $(INCDIR)/dm1/port.h
thread.o: $(INCDIR)/dm1/list.h $(INCDIR)/dm1/mutex.h
thread.o: $(INCDIR)/dm1/event.h
threadpool.o: $(INCDIR)/dm1/threadpool.h $(INCDIR)/dm1/common.h
threadpool.o: $(INCDIR)/dm1/port.h $(INCDIR)/dm1/list.h
threadpool.o: $(INCDIR)/dm1/mutex.h $(INCDIR)/dm1/except.h
threadpool.o: $(INCDIR)/dm1/thread.h $(INCDIR)/dm1/event.h
threadpool.o: $(INCDIR)/dm1/monitor.h
